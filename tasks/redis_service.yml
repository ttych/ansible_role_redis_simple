---

# - name: setup daemontools for redis
#   block:
#     - name: create redis daemontools workspace
#       file:
#         path: "{{ gitlab_daemontools_dir }}/redis/{{ item.path }}"
#         owner: "{{ item.owner }}"
#         group: "{{ item.group }}"
#         mode: "{{ item.mode }}"
#         state: directory
#       loop: "{{ gitlab_daemontools_directories_template }}"

#     - name: deploy redis daemontools run scripts
#       template:
#         src: "svscan/redis/{{ item.path }}"
#         dest: "{{ gitlab_daemontools_dir }}/redis/{{ item.path }}"
#         owner: "{{ item.owner }}"
#         group: "{{ item.group }}"
#         mode: "{{ item.mode }}"
#       loop: "{{ gitlab_daemontools_scripts_template }}"

#     - name: link as gitlab_redis daemontools service
#       file:
#         src: "{{ gitlab_daemontools_dir }}/redis"
#         dest: "{{ daemontools_svscan_dir }}/gitlab_redis"
#         state: link

#   when: has_daemontools|d(false)


- name: setup systemd system service for redis
  block:
    - name: deploy redis service
      template:
        src: "systemd/{{ redis_service }}"
        dest: "{{ systemd_service_lib}}/{{ redis_service }}"
        owner: root
        group: root
        mode: "0644"
      register: t_redis_service_deploy

    - name: enable redis service
      service:
        name: "{{ redis_service }}"
        enabled: yes
        state: started

    - name: restart redis service on change
      service:
        name: "{{ redis_service }}"
        state: restarted
      when: t_redis_conf_deploy.changed or t_redis_service_deploy.changed

  when:
    - not has_daemontools|d(false)
    - ansible_service_mgr == 'systemd'


- name: setup rc.d system service for redis
  block:
    - fail:
        msg: "not implemented"

  when:
    - not has_daemontools|d(false)
    - ansible_service_mgr == 'bsdinit'
